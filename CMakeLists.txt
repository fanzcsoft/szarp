cmake_minimum_required(VERSION 3.5)

include(CheckFunctionExists)
CHECK_FUNCTION_EXISTS(alphasort HAVE_ALPHASORT)
CHECK_FUNCTION_EXISTS(asprintf HAVE_ASPRINTF)
CHECK_FUNCTION_EXISTS(gmtime_r HAVE_GMTIME_R)
CHECK_FUNCTION_EXISTS(localtime_r HAVE_LOCALTIME_R)
CHECK_FUNCTION_EXISTS(pow10 HAVE_POW10)
CHECK_FUNCTION_EXISTS(scandir HAVE_SCANDIR)
CHECK_FUNCTION_EXISTS(timegm HAVE_TIMEGM)

find_package(Boost REQUIRED)
find_package(Protobuf REQUIRED)
find_package(FLEX REQUIRED)
find_package(OpenSSL REQUIRED)


#set(INCLUDE_DIR include)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(PACKAGE "szarp0")
set(PACKAGE_BUGREPORT "devs@newterm.pl")
set(PACKAGE_NAME "szarp2")
set(PACKAGE_STRING "szarp3")
set(PACKAGE_TARNAME "szarp4")
set(PACKAGE_URL "https://github.com/newterm/szarp")

include_directories(${CMAKE_CURRENT_BINARY_DIR})
configure_file(config.h.in config.h)

add_subdirectory( libSzarp )
add_subdirectory( libSzarp2 )
#add_subdirectory( python )
#add_subdirectory( sender )
#add_subdirectory( parcook )
#add_subdirectory( cfgdealer )
add_subdirectory( isl )
#add_subdirectory( meaner3 )
#add_subdirectory( iks )
#add_subdirectory( extern )
#add_subdirectory( wx )
#add_subdirectory( utils )
#add_subdirectory( unit_tests )
#add_subdirectory( www )
#add_subdirectory( resources )
#add_subdirectory( script )
#add_subdirectory( qt4 )
